name: Build Beta

on:
  push:
    branches:
      - master
  pull_request:


jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const fs = require("fs");
            let file = fs.readFileSync("./gradle.properties");
            file = file.toString().split("\n").map(e => e.trim().startsWith("mod_version") ? `${e}-beta-${process.env.GITHUB_SHA.substring(0, 7)}` : e).join("\n");
            fs.writeFileSync("./gradle.properties", file);

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Initialize caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/loom-cache
            ~/.gradle/wrapper
          key: ${{ runner.os }}-build-external-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-build-external-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - uses: actions/github-script@v6
        id: fname
        with:
          result-encoding: string
          script: |
            const fs = require("fs")
            return fs.readdirSync("build/libs/").filter(e => !e.endsWith("dev.jar") && !e.endsWith("sources.jar") && e.endsWith(".jar"))[0].replace(".jar", "");

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.fname.outputs.result }}
          path: build/libs/